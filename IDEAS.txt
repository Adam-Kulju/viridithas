ideas for viri
MAJOR:
- docs
- support chess variants
-- FRC
-- DFRC
-- Crazyhouse

MINOR:
- replace all the false/true constgen stuff with a proper type.
- fullwindow on big scores (+30?)
- uci bench extension
- remove `as` casts and unsafe code
- perft divide
- try to reduce attr use, it's ugly.
- make FEN conversion not halt singlethreaded when writing to file. or generally.
- the slow part of deduplication is the file I/O, consider mmap?.
- record percentage of positions where TT move saves movegen - similar for captures when we get staged movegen.
- multipv. put the moves in ThreadData and use ROOT.
- Rust features to watch for: full const generics, const floating-point maths.
- root node eval oracle.
- make the big-piece and other stuff better named
- make is_legal faster
- check evasions
- filter training positions that are forced.
- replace countermoves with countermove history
- deeper conthists
- adapt frozenight's data generation for viri.
- add good logging for everything using `log` + `env_logger`
-- datagen, data reanalysis, maybe other things
- mess about with the in-check QS score, and aspiration windows relating to it.
- fix score_capture()
- add Shuffle Chess starting positions for datagen. (double shuffle chess?)
- fix dextensions